{"version":3,"sources":["./src/app/modules/profile/profile-routing.module.ts","./src/app/modules/profile/profile.module.ts","./src/app/modules/profile/user-change-password/user-change-password.component.ts","./src/app/modules/profile/user-change-password/user-change-password.component.html","./src/app/modules/profile/user-orders/user-orders.component.ts","./src/app/modules/profile/user-orders/user-orders.component.html"],"names":[],"mappings":"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","file":"profile-profile-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserChangePasswordComponent } from './user-change-password/user-change-password.component';\nimport { UserOrdersComponent } from './user-orders/user-orders.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    redirectTo: 'change-password'\n  },\n  {\n    path: 'change-password',\n    component: UserChangePasswordComponent\n  },\n  {\n    path: 'orders',\n    component: UserOrdersComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProfileRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ProfileRoutingModule } from './profile-routing.module';\nimport { UserChangePasswordComponent } from './user-change-password/user-change-password.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { UserOrdersComponent } from './user-orders/user-orders.component';\n\n@NgModule({\n  declarations: [UserChangePasswordComponent, UserOrdersComponent],\n  imports: [\n    CommonModule,\n    ProfileRoutingModule,\n    SharedModule\n  ]\n})\nexport class ProfileModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { BasePageComponent } from 'src/app/core/base-page.component';\nimport { MyErrorStateMatcher } from 'src/app/shared/utils';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { WatcherService } from 'src/app/shared/watcher.service';\nimport { UserService } from 'src/app/shared/user.service';\nimport { BasePageService } from 'src/app/shared/base-page.service';\nimport { environment } from 'src/environments/environment.prod';\n\n@Component({\n  selector: 'app-user-change-password',\n  templateUrl: './user-change-password.component.html',\n  styleUrls: ['./user-change-password.component.sass']\n})\nexport class UserChangePasswordComponent extends BasePageComponent implements OnInit {\n  matcher = new MyErrorStateMatcher();\n  changePasswordForm = new FormGroup({\n    current_password: new FormControl('', Validators.required),\n    new_password: new FormControl('', Validators.required),\n    confirm_new_password: new FormControl('', Validators.required)\n  }, this.checkPasswords);\n\n  constructor(private basePageService: BasePageService, private watcher: WatcherService, private userService: UserService) {\n    super();\n    // this.basePageService.updateTitleDescription('Profile', `${environment.title} User Control Panel`);\n  }\n\n  ngOnInit() {\n  }\n\n  public change(data: any) {\n    this.userService.changePassword(data).subscribe(r => {\n      this.watcher.logout();\n    })\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n  }\n\n  private checkPasswords(group: FormGroup) {\n    const pass = group.get('new_password').value;\n    const confirmPass = group.get('confirm_new_password').value;\n\n    return pass === confirmPass ? null : { notSame: true };\n  }\n}\n","<div class=\"selling-page\">\n    <div class=\"main-container\">\n        <div class=\"container-fluid material-ui\">\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <form class=\"common-form\" [formGroup]=\"changePasswordForm\"\n                        (ngSubmit)=\"change(changePasswordForm.value)\">\n                        <div class=\"form-title text-center\">Change Password</div>\n                        <mat-form-field appearance=\"outline\">\n                            <input matInput placeholder=\"Current password\" formControlName=\"current_password\"\n                                [errorStateMatcher]=\"matcher\" type=\"password\">\n                            <mat-hint>Current password is <strong>required</strong></mat-hint>\n\n                            <mat-error *ngIf=\"changePasswordForm.controls['current_password'].hasError('required')\">\n                                Current password is <strong>required</strong>\n                            </mat-error>\n                        </mat-form-field>\n\n                        <mat-form-field appearance=\"outline\">\n                            <input matInput placeholder=\"New password\" formControlName=\"new_password\"\n                                [errorStateMatcher]=\"matcher\" type=\"password\">\n                            <mat-hint>New password is <strong>required</strong></mat-hint>\n\n                            <mat-error *ngIf=\"changePasswordForm.controls['new_password'].hasError('required')\">\n                                New password is <strong>required</strong>\n                            </mat-error>\n                        </mat-form-field>\n\n                        <mat-form-field appearance=\"outline\">\n                            <input matInput placeholder=\"Confirm new password\" formControlName=\"confirm_new_password\"\n                                [errorStateMatcher]=\"matcher\" type=\"password\">\n                            <mat-hint>Confirm new password is <strong>required</strong></mat-hint>\n\n                            <mat-error *ngIf=\"changePasswordForm.controls['confirm_new_password'].hasError('required')\">\n                                Confirm new password is <strong>required</strong>\n                            </mat-error>\n                        </mat-form-field>\n\n                        <button mat-raised-button type=\"submit\" [disabled]=\"!changePasswordForm.valid\">\n                            Change Password\n                        </button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { takeUntil } from 'rxjs/operators';\nimport { BasePageComponent } from 'src/app/core/base-page.component';\nimport { UserService } from 'src/app/shared/user.service';\nimport { getCurrencyConverted, getCurrencySymbol, getCurrentCurrency, getUser } from 'src/app/shared/utils';\nimport { WatcherService } from 'src/app/shared/watcher.service';\n\n@Component({\n  selector: 'app-user-orders',\n  templateUrl: './user-orders.component.html',\n  styleUrls: ['./user-orders.component.sass']\n})\nexport class UserOrdersComponent extends BasePageComponent implements OnInit {\n  displayedColumns: string[] = ['orderId', 'total', 'server', 'subServer', 'description', 'dateCreated', 'lastUpdated'];\n  data = [];\n\n  p: number = 1;\n  total: number;\n  loading: boolean;\n  pgs = [];\n\n  getCurrencySymbol = getCurrencySymbol;\n  getCurrencyConverted = getCurrencyConverted;\n  currency = getCurrentCurrency() || 'USD';\n  constructor(private user: UserService, private router: Router, private watcher: WatcherService) {\n    super();\n  }\n\n  ngOnInit() {\n    // this.getPage(1);\n    this.user.getUserLimits(getUser().id).subscribe(response => {\n      this.pgs = response;\n    })\n    this.watcher.getCurrency().subscribe(r => {\n      this.currency = r;\n    });\n  }\n\n\n  getPage(page: number) {\n    if (!isNaN(page)) {\n      this.loading = true;\n      this.user.getUserOrders(getUser().id, page).pipe(takeUntil(this.componentDestroyed$)).subscribe(response => {\n        this.total = response.totalCount;\n        this.p = page;\n        this.loading = false;\n        this.data = response.orders;\n      });\n    }\n  }\n}\n","<div class=\"selling-page\">\n    <div class=\"main-container\">\n        <div class=\"container-fluid\">\n            <!-- <div class=\"row\">\n        <div class=\"col-12 text-center form-title\">\n            User Limits\n        </div>\n    </div> -->\n            <!-- <div class=\"row mb-4\" *ngFor=\"let pg of pgs\">\n        <div class=\"col-12 f16\">\n            Name: {{pg.paymentGateway.name}}<br>\n            Limit: {{getCurrencySymbol(currency) }}{{getCurrencyConverted(pg.limit) }}<br>\n            Left: {{getCurrencySymbol(currency) }}{{getCurrencyConverted(pg.left) }}\n        </div>\n    </div>\n    <hr>\n    <div class=\"row\">\n        <div class=\"col-12 text-center form-title\">\n            Orders History\n        </div>\n    </div> -->\n            <app-common-orders [selfUser]=\"true\">\n            </app-common-orders>\n        </div>\n    </div>\n</div>"],"sourceRoot":"webpack:///"}