{"version":3,"sources":["webpack:///src/app/modules/profile/profile-routing.module.ts","webpack:///src/app/modules/profile/profile.module.ts","webpack:///src/app/modules/profile/user-change-password/user-change-password.component.ts","webpack:///src/app/modules/profile/user-change-password/user-change-password.component.html","webpack:///src/app/modules/profile/user-orders/user-orders.component.ts","webpack:///src/app/modules/profile/user-orders/user-orders.component.html"],"names":["routes","path","pathMatch","redirectTo","component","ProfileRoutingModule","forChild","imports","exports","ProfileModule","declarations","UserChangePasswordComponent","basePageService","watcher","userService","matcher","changePasswordForm","current_password","required","new_password","confirm_new_password","checkPasswords","data","changePassword","subscribe","r","logout","group","pass","get","value","confirmPass","notSame","change","selector","templateUrl","styleUrls","UserOrdersComponent","user","router","displayedColumns","p","pgs","getCurrencySymbol","getCurrencyConverted","currency","getUserLimits","id","response","getCurrency","page","isNaN","loading","getUserOrders","pipe","componentDestroyed$","total","totalCount","orders"],"mappings":"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","file":"profile-profile-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserChangePasswordComponent } from './user-change-password/user-change-password.component';\nimport { UserOrdersComponent } from './user-orders/user-orders.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    redirectTo: 'change-password'\n  },\n  {\n    path: 'change-password',\n    component: UserChangePasswordComponent\n  },\n  {\n    path: 'orders',\n    component: UserOrdersComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProfileRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ProfileRoutingModule } from './profile-routing.module';\nimport { UserChangePasswordComponent } from './user-change-password/user-change-password.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { UserOrdersComponent } from './user-orders/user-orders.component';\n\n@NgModule({\n  declarations: [UserChangePasswordComponent, UserOrdersComponent],\n  imports: [\n    CommonModule,\n    ProfileRoutingModule,\n    SharedModule\n  ]\n})\nexport class ProfileModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { BasePageComponent } from 'src/app/core/base-page.component';\nimport { MyErrorStateMatcher } from 'src/app/shared/utils';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { WatcherService } from 'src/app/shared/watcher.service';\nimport { UserService } from 'src/app/shared/user.service';\nimport { BasePageService } from 'src/app/shared/base-page.service';\nimport { environment } from 'src/environments/environment.prod';\n\n@Component({\n  selector: 'app-user-change-password',\n  templateUrl: './user-change-password.component.html',\n  styleUrls: ['./user-change-password.component.sass']\n})\nexport class UserChangePasswordComponent extends BasePageComponent implements OnInit {\n  matcher = new MyErrorStateMatcher();\n  changePasswordForm = new FormGroup({\n    current_password: new FormControl('', Validators.required),\n    new_password: new FormControl('', Validators.required),\n    confirm_new_password: new FormControl('', Validators.required)\n  }, this.checkPasswords);\n\n  constructor(private basePageService: BasePageService, private watcher: WatcherService, private userService: UserService) {\n    super();\n    // this.basePageService.updateTitleDescription('Profile', `${environment.title} User Control Panel`);\n  }\n\n  ngOnInit() {\n  }\n\n  public change(data: any) {\n    this.userService.changePassword(data).subscribe(r => {\n      this.watcher.logout();\n    })\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n  }\n\n  private checkPasswords(group: FormGroup) {\n    const pass = group.get('new_password').value;\n    const confirmPass = group.get('confirm_new_password').value;\n\n    return pass === confirmPass ? null : { notSame: true };\n  }\n}\n","<div class=\"selling-page\">\n    <div class=\"main-container\">\n        <div class=\"container-fluid material-ui\">\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <form class=\"common-form\" [formGroup]=\"changePasswordForm\"\n                        (ngSubmit)=\"change(changePasswordForm.value)\">\n                        <div class=\"form-title text-center\">Change Password</div>\n                        <mat-form-field appearance=\"outline\">\n                            <input matInput placeholder=\"Current password\" formControlName=\"current_password\"\n                                [errorStateMatcher]=\"matcher\" type=\"password\">\n                            <mat-hint>Current password is <strong>required</strong></mat-hint>\n\n                            <mat-error *ngIf=\"changePasswordForm.controls['current_password'].hasError('required')\">\n                                Current password is <strong>required</strong>\n                            </mat-error>\n                        </mat-form-field>\n\n                        <mat-form-field appearance=\"outline\">\n                            <input matInput placeholder=\"New password\" formControlName=\"new_password\"\n                                [errorStateMatcher]=\"matcher\" type=\"password\">\n                            <mat-hint>New password is <strong>required</strong></mat-hint>\n\n                            <mat-error *ngIf=\"changePasswordForm.controls['new_password'].hasError('required')\">\n                                New password is <strong>required</strong>\n                            </mat-error>\n                        </mat-form-field>\n\n                        <mat-form-field appearance=\"outline\">\n                            <input matInput placeholder=\"Confirm new password\" formControlName=\"confirm_new_password\"\n                                [errorStateMatcher]=\"matcher\" type=\"password\">\n                            <mat-hint>Confirm new password is <strong>required</strong></mat-hint>\n\n                            <mat-error *ngIf=\"changePasswordForm.controls['confirm_new_password'].hasError('required')\">\n                                Confirm new password is <strong>required</strong>\n                            </mat-error>\n                        </mat-form-field>\n\n                        <button mat-raised-button type=\"submit\" [disabled]=\"!changePasswordForm.valid\">\n                            Change Password\n                        </button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { takeUntil } from 'rxjs/operators';\nimport { BasePageComponent } from 'src/app/core/base-page.component';\nimport { UserService } from 'src/app/shared/user.service';\nimport { getCurrencyConverted, getCurrencySymbol, getCurrentCurrency, getUser } from 'src/app/shared/utils';\nimport { WatcherService } from 'src/app/shared/watcher.service';\n\n@Component({\n  selector: 'app-user-orders',\n  templateUrl: './user-orders.component.html',\n  styleUrls: ['./user-orders.component.sass']\n})\nexport class UserOrdersComponent extends BasePageComponent implements OnInit {\n  displayedColumns: string[] = ['orderId', 'total', 'server', 'subServer', 'description', 'dateCreated', 'lastUpdated'];\n  data = [];\n\n  p: number = 1;\n  total: number;\n  loading: boolean;\n  pgs = [];\n\n  getCurrencySymbol = getCurrencySymbol;\n  getCurrencyConverted = getCurrencyConverted;\n  currency = getCurrentCurrency() || 'USD';\n  constructor(private user: UserService, private router: Router, private watcher: WatcherService) {\n    super();\n  }\n\n  ngOnInit() {\n    // this.getPage(1);\n    this.user.getUserLimits(getUser().id).subscribe(response => {\n      this.pgs = response;\n    })\n    this.watcher.getCurrency().subscribe(r => {\n      this.currency = r;\n    });\n  }\n\n\n  getPage(page: number) {\n    if (!isNaN(page)) {\n      this.loading = true;\n      this.user.getUserOrders(getUser().id, page).pipe(takeUntil(this.componentDestroyed$)).subscribe(response => {\n        this.total = response.totalCount;\n        this.p = page;\n        this.loading = false;\n        this.data = response.orders;\n      });\n    }\n  }\n}\n","<div class=\"selling-page\">\n    <div class=\"main-container\">\n        <div class=\"container-fluid\">\n            <!-- <div class=\"row\">\n        <div class=\"col-12 text-center form-title\">\n            User Limits\n        </div>\n    </div> -->\n            <!-- <div class=\"row mb-4\" *ngFor=\"let pg of pgs\">\n        <div class=\"col-12 f16\">\n            Name: {{pg.paymentGateway.name}}<br>\n            Limit: {{getCurrencySymbol(currency) }}{{getCurrencyConverted(pg.limit) }}<br>\n            Left: {{getCurrencySymbol(currency) }}{{getCurrencyConverted(pg.left) }}\n        </div>\n    </div>\n    <hr>\n    <div class=\"row\">\n        <div class=\"col-12 text-center form-title\">\n            Orders History\n        </div>\n    </div> -->\n            <app-common-orders [selfUser]=\"true\">\n            </app-common-orders>\n        </div>\n    </div>\n</div>"]}