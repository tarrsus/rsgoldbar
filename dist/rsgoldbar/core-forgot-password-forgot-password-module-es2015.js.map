{"version":3,"sources":["./src/app/core/forgot-password/forgot-password.module.ts","./src/app/core/forgot-password/forgot-password/forgot-password.component.ts","./src/app/core/forgot-password/forgot-password/forgot-password.component.html","./src/app/core/forgot-password/forgot-password-routing.module.ts"],"names":[],"mappings":"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","file":"core-forgot-password-forgot-password-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ForgotPasswordRoutingModule } from './forgot-password-routing.module';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n\n@NgModule({\n  declarations: [ForgotPasswordComponent],\n  imports: [\n    CommonModule,\n    ForgotPasswordRoutingModule,\n    SharedModule\n  ]\n})\nexport class ForgotPasswordModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { BasePageComponent } from '../../base-page.component';\nimport { MyErrorStateMatcher, isEmptyOrNull } from 'src/app/shared/utils';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { UserService } from 'src/app/shared/user.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { takeUntil } from 'rxjs/operators';\nimport { BasePageService } from 'src/app/shared/base-page.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.sass']\n})\nexport class ForgotPasswordComponent extends BasePageComponent implements OnInit {\n  matcher = new MyErrorStateMatcher();\n  forgetForm = new FormGroup({\n    email: new FormControl('', Validators.required)\n  });\n\n  constructor(private basePageService: BasePageService, private user: UserService, private router: Router, private route: ActivatedRoute) {\n    super();\n    this.basePageService.updateTitleDescription('Forgot Password', 'Can\\t access your account? Reset your password');\n  }\n\n  ngOnInit() {\n    this.route.queryParams.subscribe(result => {\n      if (!isEmptyOrNull(result.identifier) && !isEmptyOrNull(result.userId)) {\n        this.user.generatePassword({\n          identifier: result.identifier,\n          userId: result.userId\n        }).pipe(takeUntil(this.componentDestroyed$)).subscribe(response => {\n          this.router.navigate([`/login`]);\n        });\n      }\n    });\n  }\n\n  public forget(data: any) {\n    this.user.forgotPassword(data).pipe(takeUntil(this.componentDestroyed$)).subscribe(result => {\n      this.router.navigate([`/login`]);\n    });\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n  }\n}\n\n\n","<div class=\"selling-page\">\n    <div class=\"main-container\">\n        <div class=\"container-fluid material-ui\">\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <form class=\"common-form\" [formGroup]=\"forgetForm\" (ngSubmit)=\"forget(forgetForm.value)\">\n                        <div class=\"form-title text-center\">Forgot Password?</div>\n                        <mat-form-field appearance=\"outline\">\n                            <input matInput placeholder=\"Email\" formControlName=\"email\" [errorStateMatcher]=\"matcher\"\n                                type=\"text\">\n                            <mat-hint>Email is <strong>required</strong></mat-hint>\n\n                            <mat-error *ngIf=\"forgetForm.controls['email'].hasError('required')\">\n                                Email is <strong>required</strong>\n                            </mat-error>\n                        </mat-form-field>\n\n                        <button mat-raised-button type=\"submit\" [disabled]=\"!forgetForm.valid\">\n                            Reset Password\n                        </button>\n\n                        <div class=\"pt-4\">\n                            <h4>Remember your password?</h4>\n                            <a routerLink=\"/login\" class=\"link\">Go back to login page</a>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ForgotPasswordComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ForgotPasswordRoutingModule { }\n"],"sourceRoot":"webpack:///"}