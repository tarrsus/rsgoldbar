{"version":3,"sources":["webpack:///src/app/modules/buy/buy/buy.component.ts","webpack:///src/app/modules/buy/buy/buy.component.html","webpack:///src/app/modules/buy/buy-routing.module.ts","webpack:///src/app/modules/buy/buy.module.ts"],"names":["BuyComponent","route","watcher","title","meta","router","order","snackBar","getCurrencySymbol","getCurrencyConverted","currency","lessThanStock","stockAmount","price","url","isOsrs","indexOf","amount","total","rsn","selected","selectedPaymentGateway","selectedPaymentGatewayName","paymentGateways","stocks","snapshot","data","stock","selectPaymentGateway","getCurrency","subscribe","r","$event","name","open","duration","isNaN","payload","gold","type","units","paymentGatewayId","refCode","localStorage","getItem","addOrder","result","redirect_url","newTab","window","location","href","sentence","osrs","rs3","selling","find","x","path","navigate","paymentGateway","fees","feesPercentage","subtotal","redirect","changed","onSelect","buy","selector","templateUrl","styleUrls","routes","pathMatch","redirectTo","component","resolve","BuyRoutingModule","forChild","imports","exports","BuyModule","declarations"],"mappings":"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","file":"buy-buy-module-es5.js","sourcesContent":["import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { OrderService } from 'src/app/shared/order.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { getCurrencyConverted, getCurrencySymbol, getCurrentCurrency, getPaymentGateways, isEmptyOrNull, round, sendLiveChatMessage } from 'src/app/shared/utils';\nimport { Meta, Title } from '@angular/platform-browser';\nimport { WatcherService } from 'src/app/shared/watcher.service';\n\n@Component({\n  selector: 'app-buy',\n  templateUrl: './buy.component.html',\n  styleUrls: ['./buy.component.sass']\n})\nexport class BuyComponent implements OnInit {\n  getCurrencySymbol = getCurrencySymbol;\n  getCurrencyConverted = getCurrencyConverted;\n  currency = getCurrentCurrency() || 'USD';\n\n  lessThanStock = false;\n  stockAmount = 0;\n  price = 0;\n  url = this.router.url;\n  isOsrs = this.url.indexOf('oldschool') >= 0;\n  amount = 0;\n  total = 0;\n  rsn = '';\n  // minAmount = this.isOsrs ? 5 : 50;\n  selected = 'Crypto';\n\n  selectedPaymentGateway = null;\n  selectedPaymentGatewayName = null;\n  paymentGateways = getPaymentGateways();\n  stocks;\n\n  // tslint:disable-next-line:max-line-length\n  constructor(private route: ActivatedRoute, private watcher: WatcherService, private title: Title, private meta: Meta, private router: Router, private order: OrderService, private snackBar: MatSnackBar) {\n    this.stocks = this.route.snapshot.data.stock;\n  }\n\n\n  ngOnInit() {\n    this.isOsrs = this.url.indexOf('oldschool') >= 0;\n    this.selectPaymentGateway(this.selected);\n    this.watcher.getCurrency().subscribe(r => {\n      this.currency = r;\n      this.total = round(this.amount * this.price);\n    });\n  }\n\n  public onSelect($event) {\n    this.selected = $event.name;\n    this.selectPaymentGateway(this.selected);\n  }\n\n  public buy() {\n    if (isEmptyOrNull(this.rsn)) {\n      this.snackBar.open('RSN cannot be empty', 'Dismiss', {\n        duration: 5000,\n      });\n      return;\n    }\n\n    if (isEmptyOrNull(this.amount)) {\n      this.snackBar.open('Amount cannot be empty', 'Dismiss', {\n        duration: 5000,\n      });\n      return;\n    }\n\n    if (isNaN(this.amount)) {\n      this.snackBar.open('Amount is not a number', 'Dismiss', {\n        duration: 5000,\n      });\n      return;\n    }\n\n    if (this.amount > this.stockAmount || this.stockAmount <= 0) {\n      this.snackBar.open('Cannot buy more than stock', 'Dismiss', {\n        duration: 5000,\n      });\n      return;\n    }\n\n    if (this.amount <= 0) {\n      this.snackBar.open('Amount cannot be negative', 'Dismiss', {\n        duration: 5000,\n      });\n      return;\n    }\n\n    // if (this.amount < this.minAmount) {\n    //   this.snackBar.open(`Minimum order: ${this.minAmount}M`, 'Dismiss', {\n    //     duration: 5000,\n    //   });\n    //   return;\n    // }\n\n    const total = +round(this.amount * this.price);\n    if (total <= 0 || isNaN(total)) {\n      this.snackBar.open('Total amount calculated is incorrect', 'Dismiss', {\n        duration: 5000,\n      });\n      return;\n    }\n\n\n\n    const payload = {\n      gold: {\n        type: this.isOsrs ? 'oldschool' : 'runescape3',\n        units: +this.amount,\n        rsn: this.rsn,\n      },\n      currency: this.currency,\n      // email: this.email,\n      paymentGatewayId: this.selectedPaymentGateway,\n      refCode: localStorage.getItem('ref')\n    };\n\n    switch (this.selected) {\n      case 'Crypto':\n      case 'Mastercard':\n      case 'Visa':\n      case 'Skrill':\n      case 'Klarna':\n      case 'Trustly':\n        this.snackBar.open('Successfully placed order, you will now be redirected to our payment gateway', 'Dismiss', {\n          duration: 5000,\n        });\n\n        this.order.addOrder(payload).subscribe(result => {\n          if (result.redirect_url) {\n            const newTab = window.open();\n            newTab.location.href = result.redirect_url;\n          }\n        });\n        break;\n      default:\n        let sentence = `Hello,\\nI would to order ${this.amount}M ${this.isOsrs ? 'OSRS' : 'RS3'}\\nRSN: ${this.rsn}\\nPayment gateway: ${this.selectedPaymentGatewayName}`;\n        sendLiveChatMessage(sentence);\n        break;\n    }\n  }\n\n  public changed(type, $event) {\n    if (type === 'amount') {\n      this.amount = $event;\n      this.total = round(this.amount * this.price);\n    } else {\n      this.total = $event;\n      this.amount = round(this.total / this.price);\n    }\n  }\n\n  public get feesPercentage() {\n    if (!this.selectedPaymentGateway) {\n      return 0;\n    }\n    const paymentGateway = this.paymentGateways.find(x => x.paymentGatewayId === this.selectedPaymentGateway)\n    return paymentGateway ? paymentGateway.fees : 0;\n  }\n\n  public get fees() {\n    return this.feesPercentage === 0 ? 0 : +round(this.subtotal * ((this.feesPercentage) / 100));\n  }\n\n  public get subtotal(): number {\n    return this.total;\n  }\n\n  public get totalInvoice(): number {\n    return round(this.fees + this.subtotal)\n  }\n\n  public selectPaymentGateway(name: string) {\n    if (this.stocks) {\n      this.stockAmount = this.isOsrs ? this.stocks.osrs.units : this.stocks.rs3.units;\n      this.price = this.isOsrs ? this.stocks.osrs.selling : this.stocks.rs3.selling;;\n      this.total = round(this.amount * this.price);\n      this.selectedPaymentGateway = this.paymentGateways.find(x => x.name === name).paymentGatewayId;\n      this.selectedPaymentGatewayName = this.paymentGateways.find(x => x.name === name).name;\n    }\n  }\n\n  public redirect(path: string) {\n    this.router.navigate([`/buy/${path}`])\n  }\n}\n","<div class=\"buy-page\">\n    <div class=\"main-container\">\n        <div class=\"container-fluid\">\n            <div class=\"row\">\n                <div class=\"col-12 landing-title\">\n                    Buy <span class=\"color-gold\">{{isOsrs ? 'OSRS': 'RS3'}} Gold</span>\n                </div>\n            </div>\n            <div class=\"row mt-2\">\n                <div class=\"col-12 landing-description\">\n                    <span class=\"color-gold\">Save your time</span>, get everything that you need\n                </div>\n            </div>\n            <div class=\"transparent-container\">\n                <div class=\"row img-preview-container\">\n                    <div class=\"col-12\">\n                        <div class=\"d-flex\">\n                            <div class=\"img-preview-bg\" [class.selected-game]=\"isOsrs\" (click)=\"redirect('oldschool')\">\n                                <img class=\"img-preview\" src=\"./assets/images/branding/osrs-preview.png\" />\n                            </div>\n                            <div class=\"img-preview-bg\" [class.selected-game]=\"!isOsrs\"\n                                (click)=\"redirect('runescape3')\">\n                                <img class=\"img-preview\" style=\"padding: 35px;\"\n                                    src=\"./assets/images/branding/rs3-preview.png\" />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row mt-4\">\n                    <div class=\"col-6\">\n                        <div class=\"content-wrapper-buy\">\n                            <div class=\"row mt-3\">\n                                <div class=\"col-12 upper-text\">\n                                    WE’RE CURRENTLY SELLING {{isOsrs ? 'OSRS': 'RS3'}} GOLD FOR\n                                </div>\n                            </div>\n                            <div class=\"row mt-3\">\n                                <div class=\"col-12 mid-text\">\n                                    <span class=\"price\">\n                                        {{getCurrencySymbol(currency)}}{{getCurrencyConverted(price) | number}}/M\n                                    </span>\n                                </div>\n                            </div>\n                            <div class=\"row mt-4\">\n                                <div class=\"col-12 box-title\">\n                                    Amount You’d Wish To Buy:\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-lg-12 col-xl-12 col-md-12\">\n                                    <div class=\"box-buy\">\n                                        <input matInput placeholder=\"Amount to order\" [(ngModel)]=\"amount\"\n                                            (ngModelChange)=\"changed('amount', $event)\" type=\"number\">\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"row mt-2\">\n                                <div class=\"col-12 box-title\">\n                                    Enter Character Name:\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-12\">\n                                    <div class=\"box-buy\">\n                                        <input matInput placeholder=\"RSN\" [(ngModel)]=\"rsn\" type=\"text\">\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-6\">\n                        <app-payment-methods [currentPaymentMethod]=\"selected\" (onSelect)=\"onSelect($event)\">\n                        </app-payment-methods>\n\n                        <div class=\"d-flex box-title\">\n                            <div class=\"w-50 text-left pl-4\">\n                                Payment Gateway:\n                            </div>\n                            <div class=\"w-50 text-right\">\n                                {{ selected }}\n                            </div>\n                        </div>\n                        <div class=\"d-flex box-title\">\n                            <div class=\"w-50 text-left pl-4\">\n                                Character Name:\n                            </div>\n                            <div class=\"w-50 text-right\">\n                                {{ rsn }}\n                            </div>\n                        </div>\n                        <div class=\"d-flex box-title\">\n                            <div class=\"w-50 text-left pl-4\">\n                                Sub Total:\n                            </div>\n                            <div class=\"w-50 text-right\">\n                                {{ getCurrencySymbol(currency)}}{{getCurrencyConverted(subtotal) | number}}\n                            </div>\n                        </div>\n                        <div class=\"d-flex box-title\">\n                            <div class=\"w-50 text-left pl-4\">\n                                Fees (+{{feesPercentage}}%):\n                            </div>\n                            <div class=\"w-50 text-right\">\n                                {{ getCurrencySymbol(currency)}}{{getCurrencyConverted(fees) | number}}\n                            </div>\n                        </div>\n                        <div class=\"d-flex box-title\">\n                            <div class=\"w-50 text-left pl-4\">\n                                Total Price:\n                            </div>\n                            <div class=\"w-50 text-right\">\n                                {{ getCurrencySymbol(currency)}}{{getCurrencyConverted(totalInvoice) | number}}\n                            </div>\n                        </div>\n                        <div class=\"row mt-4\">\n                            <div class=\"col-12 pl-4\">\n                                <button class=\"w-100 mr-auto ml-auto d-block\" mat-flat-button color=\"primary\"\n                                    (click)=\"buy()\">\n                                    Buy Now\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- <div class=\"row\">\n                <div class=\"col-12\">\n                    <div class=\"row content-wrapper-main\">\n                        <div class=\"col-xl-8 col-lg-8 mb-4\">\n                            <div class=\"row\">\n                                <div class=\"col-12\">\n                                    <div class=\"content-wrapper-buy\">\n                                        <div class=\"row mt-3\">\n                                            <div class=\"col-12\">\n                                                <div class=\"price-container\">\n                                                    PRICE: <span\n                                                        class=\"price\">{{getCurrencySymbol(currency)}}{{getCurrencyConverted(price)\n                                                        |\n                                                        number}}/M</span>\n                                                </div>\n    \n                                                <div class=\"stock-container\">\n                                                    Current Available Stock: <span class=\"stock\">{{stockAmount}}M</span>\n                                                </div>\n                                            </div>\n                                        </div>\n    \n                                        <div class=\"row mt-4\">\n                                            <div class=\"col-lg-5 col-xl-5 col-md-5\">\n                                                <mat-form-field class=\"w-100\" appearance=\"outline\">\n                                                    <mat-label>Gold Amount</mat-label>\n                                                    <input matInput placeholder=\"Amount to order\" [(ngModel)]=\"amount\"\n                                                        (ngModelChange)=\"changed('amount', $event)\" type=\"number\">\n                                                </mat-form-field>\n                                            </div>\n    \n    \n                                            <div class=\"col-lg-2 col-xl-2 col-md-2 d-lg-block exchange-icon text-center\">\n                                                <img src=\"./assets/images/exchange-icon.svg\">\n                                            </div>\n    \n                                            <div class=\"col-lg-5 col-xl-5 col-md-5\">\n                                                <mat-form-field class=\"w-100\" appearance=\"outline\">\n                                                    <mat-label>Total {{currency}} (+{{feesPercentage}}% Fees)</mat-label>\n                                                    <input matInput placeholder=\"Total price in {{currency}}\" type=\"number\"\n                                                        [(ngModel)]=\"total\" (ngModelChange)=\"changed('currency', $event)\">\n                                                </mat-form-field>\n                                            </div>\n                                        </div>\n    \n                                        <div class=\"row\">\n                                            <div class=\"col-12\">\n                                                <mat-form-field class=\"w-100\" appearance=\"outline\">\n                                                    <mat-label>RS Name</mat-label>\n                                                    <input matInput placeholder=\"RSN\" [(ngModel)]=\"rsn\" type=\"text\">\n                                                </mat-form-field>\n                                            </div>\n                                        </div>\n    \n                                        <div class=\"mobile pr-4 pl-4\">\n                                            <div class=\"row\">\n                                                <div class=\"col-12\">\n                                                    <mat-form-field appearance=\"outline\">\n                                                        <mat-label>Gold Amount</mat-label>\n                                                        <input matInput placeholder=\"Amount to order\" [(ngModel)]=\"amount\"\n                                                            (ngModelChange)=\"changed('amount', $event)\" type=\"number\">\n                                                    </mat-form-field>\n                                                </div>\n                                                <div class=\"col-12\">\n                                                    <mat-form-field appearance=\"outline\">\n                                                        <mat-label>Total {{currency}}</mat-label>\n                                                        <input matInput placeholder=\"Total price in {{currency}}\"\n                                                            type=\"number\" [(ngModel)]=\"total\"\n                                                            (ngModelChange)=\"changed('currency', $event)\">\n                                                    </mat-form-field>\n                                                </div>\n                                                <div class=\"col-12\">\n                                                    <mat-form-field appearance=\"outline\">\n                                                        <mat-label>RS Name</mat-label>\n                                                        <input matInput placeholder=\"RSN\" [(ngModel)]=\"rsn\" type=\"text\">\n                                                    </mat-form-field>\n                                                </div>\n                                            </div>\n                                        </div>\n    \n    \n                                        <app-payment-methods [currentPaymentMethod]=\"selected\"\n                                            (onSelect)=\"onSelect($event)\">\n                                        </app-payment-methods>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-xl-4 col-lg-4\">\n                            <div class=\"content-wrapper-details\">\n                                <div class=\"details-title\">\n                                    ORDER DETAILS\n                                </div>\n                                <div class=\"details-description\">\n                                    {{amount}}M OSRS Gold\n                                </div>\n                                <div class=\"details-price\">\n                                    {{ getCurrencySymbol(currency)}}{{getCurrencyConverted(price) | number}}/M\n                                </div>\n                                <div class=\"vertical-spacer\">\n                                </div>\n                                <div class=\"details-subtotal d-flex\">\n                                    <div class=\"w-50\">\n                                        Sub Total:\n                                    </div>\n                                    <div class=\"w-50 text-right\">\n                                        {{ getCurrencySymbol(currency)}}{{getCurrencyConverted(subtotal) | number}}\n                                    </div>\n                                </div>\n                                <div class=\"details-fees d-flex\">\n                                    <div class=\"w-50\">\n                                        Fees:\n                                    </div>\n                                    <div class=\"w-50 text-right\">\n                                        {{ getCurrencySymbol(currency)}}{{getCurrencyConverted(fees) | number}}\n                                    </div>\n                                </div>\n                                <div class=\"details-total-price d-flex\">\n                                    <div class=\"w-50\">\n                                        Total Price:\n                                    </div>\n                                    <div class=\"w-50 text-right\">\n                                        {{ getCurrencySymbol(currency)}}{{getCurrencyConverted(totalInvoice) | number}}\n                                    </div>\n                                </div>\n                                <div class=\"details-purchase\">\n                                    <button mat-raised-button type=\"button\" (click)=\"buy()\">\n                                        Purchase\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div> -->\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { StockResolver } from 'src/app/shared/resolvers/StockResolver.resolver';\nimport { BuyComponent } from './buy/buy.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    redirectTo: 'oldschool'\n  },\n  {\n    path: 'oldschool',\n    component: BuyComponent,\n    resolve: {\n      stock: StockResolver\n    }\n  },\n  {\n    path: 'runescape3',\n    component: BuyComponent,\n    resolve: {\n      stock: StockResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BuyRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BuyRoutingModule } from './buy-routing.module';\nimport { BuyComponent } from './buy/buy.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n\n@NgModule({\n  declarations: [BuyComponent],\n  imports: [\n    CommonModule,\n    BuyRoutingModule,\n    SharedModule\n  ]\n})\nexport class BuyModule { }\n"]}