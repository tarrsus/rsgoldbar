{"version":3,"sources":["webpack:///src/app/modules/order-single/order-single-routing.module.ts","webpack:///src/app/modules/order-single/order-single.module.ts","webpack:///src/app/modules/order-single/order-single/order-single.component.ts","webpack:///src/app/modules/order-single/order-single/order-single.component.html"],"names":["routes","path","component","pathMatch","redirectTo","OrderSingleRoutingModule","forChild","imports","exports","OrderSingleModule","declarations","OrderSingleComponent","route","router","order","orderId","snapshot","params","orderStatus","getSingleOrder","subscribe","result","orderItem","setTimeout","startChat","navigate","sentence","account","gold","units","server","paymentGateway","name","rsn","invoice","subtotal","currency","fee","total","coupon","code","selector","templateUrl","styleUrls"],"mappings":"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","file":"order-single-order-single-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { OrderSingleComponent } from './order-single/order-single.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OrderSingleComponent,\n    pathMatch: 'full',\n    redirectTo: ''\n  },\n  {\n    path: ':orderId',\n    component: OrderSingleComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class OrderSingleRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { OrderSingleRoutingModule } from './order-single-routing.module';\nimport { OrderSingleComponent } from './order-single/order-single.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n\n@NgModule({\n  declarations: [OrderSingleComponent],\n  imports: [\n    CommonModule,\n    OrderSingleRoutingModule,\n    SharedModule\n  ]\n})\nexport class OrderSingleModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { OrderService } from 'src/app/shared/order.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { getCurrencySymbol, sendLiveChatMessage } from 'src/app/shared/utils';\n\n@Component({\n  selector: 'app-order-single',\n  templateUrl: './order-single.component.html',\n  styleUrls: ['./order-single.component.sass']\n})\nexport class OrderSingleComponent implements OnInit {\n  orderId = this.route.snapshot.params.orderId;\n  orderItem: any;\n  dataSource: MatTableDataSource<any>;\n  orderStatus = '-';\n  constructor(private route: ActivatedRoute, private router: Router, private order: OrderService) {\n  }\n\n  ngOnInit() {\n    this.order.getSingleOrder(this.orderId).subscribe(result => {\n      this.orderItem = result\n      setTimeout(() => {\n        this.startChat();\n        this.router.navigate(['/']);\n      }, 1000);\n    });\n  }\n\n  public startChat() {\n    if (this.orderItem) {\n      let sentence = `Hello,\\nMy order ID is ${this.orderItem.orderId}`;\n      if (this.orderItem.account) {\n\n      } else {\n        sentence += `\\n${this.orderItem.gold.units}M of ${this.orderItem.gold.server === 1 ? 'OSRS' : 'RS3'} gold\\nPayment gateway: ${this.orderItem.paymentGateway.name}\\nRSN: ${this.orderItem.gold.rsn}\\nSub-total: ${this.orderItem.invoice.subtotal}${getCurrencySymbol(this.orderItem.currency)}\\nFees: ${this.orderItem.invoice.fee}${getCurrencySymbol(this.orderItem.currency)}\\nTotal invoice (with discount): ${this.orderItem.invoice.total}${getCurrencySymbol(this.orderItem.currency)}\\nCoupon used: ${this.orderItem.coupon ? this.orderItem.coupon.code : 'N/A'}\\nCurrency: ${this.orderItem.currency}`;\n      }\n\n      sendLiveChatMessage(sentence);\n    }\n  }\n}","<div class=\"container-fluid\">\n    <ng-container *ngIf=\"orderItem\">\n        <div class=\"row\">\n            <div class=\"col-12\">\n                <div class=\"order-item-container\">\n                    <div class=\"order-id\">\n                        Order Id: {{orderItem.orderId}}\n                    </div>\n                    <div class=\"order-details\">\n                        Order Status: {{orderItem.orderStatus}}\n                    </div>\n                    <div class=\"order-details\">\n                        Order Delivered: {{orderItem.delivered ? 'Yes' : 'No'}}\n                    </div>\n                    <div class=\"order-details\" *ngIf=\"orderItem.orderAccount\">\n                        Account Title: {{orderItem.orderAccount.account.title}}<br>\n                        Account Price: ${{orderItem.orderAccount.price}}\n                    </div>\n                    <div class=\"order-details\" *ngIf=\"orderItem.orderGold\">\n                        RSN: {{orderItem.orderGold.rsn}}<br>\n                        Amount: {{orderItem.orderGold.units}} (${{orderItem.orderGold.unitPrice}}/M)<br>\n                        Total Price: ${{orderItem.orderGold.amount}}<br>\n                        Type: {{orderItem.orderGold.type}}<br>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-12\">\n                <div class=\"center-chat-button\">\n                    <button mat-raised-button class=\"buy-button\" type=\"button\" (click)=\"startChat()\">Start\n                        Chat</button>\n                </div>\n            </div>\n        </div>\n    </ng-container>\n</div>"]}