{"version":3,"sources":["webpack:///src/app/modules/infernal/infernal.module.ts","webpack:///src/app/modules/infernal/infernal-routing.module.ts","webpack:///src/app/modules/infernal/infernal/infernal.component.ts","webpack:///src/app/modules/infernal/infernal/infernal.component.html"],"names":["InfernalModule","declarations","imports","routes","path","component","InfernalRoutingModule","forChild","exports","InfernalComponent","regions","imgUrl","name","platforms","weapons","miscs","uploadSpeeds","ranged","defence","prayer","magic","hitpoints","selectedRegion","selectedPlatform","selectedSpeed","selectedWeapon","selectedMiscs","RIGOUR","AUGURY","flag","w","window","value","openLiveChat","disabled","selector","templateUrl","styleUrls"],"mappings":"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","file":"infernal-infernal-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { InfernalRoutingModule } from './infernal-routing.module';\nimport { InfernalComponent } from './infernal/infernal.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n@NgModule({\n  declarations: [InfernalComponent],\n  imports: [CommonModule, InfernalRoutingModule, SharedModule]\n})\nexport class InfernalModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { InfernalComponent } from './infernal/infernal.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: InfernalComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class InfernalRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { sendLiveChatMessage } from 'src/app/shared/utils';\n\n@Component({\n  selector: 'app-infernal',\n  templateUrl: './infernal.component.html',\n  styleUrls: ['./infernal.component.sass']\n})\nexport class InfernalComponent implements OnInit {\n  regions = [\n    {\n      imgUrl: './assets/images/flags/USD.png',\n      name: 'NA'\n    },\n    {\n      imgUrl: './assets/images/flags/EUR.png',\n      name: 'EU'\n    },\n    {\n      imgUrl: './assets/images/flags/AUD.png',\n      name: 'AU'\n    },\n    {\n      imgUrl: './assets/images/other.png',\n      name: 'Other'\n    }\n  ];\n\n  platforms = [\n    {\n      imgUrl: './assets/images/win.png',\n      name: 'Win'\n    },\n    {\n      imgUrl: './assets/images/ios.png',\n      name: 'Mac'\n    }\n  ];\n\n  weapons = [\n    {\n      imgUrl: './assets/images/infernal/bof.png',\n      name: 'BOF'\n    },\n    {\n      imgUrl: './assets/images/infernal/acb.png',\n      name: 'ACB'\n    },\n    {\n      imgUrl: './assets/images/infernal/dcb.png',\n      name: 'DCB'\n    },\n    {\n      imgUrl: './assets/images/infernal/rcb.png',\n      name: 'RCB'\n    },\n    {\n      imgUrl: './assets/images/infernal/dhcb.png',\n      name: 'DHCB'\n    }\n  ];\n\n  miscs = [\n    {\n      imgUrl: './assets/images/infernal/rigour.png',\n      name: 'RIGOUR'\n    },\n    {\n      imgUrl: './assets/images/infernal/augury.png',\n      name: 'AUGURY'\n    },\n    {\n      imgUrl: './assets/images/infernal/slayer.png',\n      name: 'SLAYER TASK'\n    }\n  ];\n\n  uploadSpeeds = ['1-5 MB', '5-15 MB', '15-50 MB', '50+ MB'];\n\n  ranged = new FormControl(0);\n  defence = new FormControl(0);\n  prayer = new FormControl(0);\n  magic = new FormControl(0);\n  hitpoints = new FormControl(0);\n\n  selectedRegion = null;\n  selectedPlatform = null;\n  selectedSpeed = null;\n  selectedWeapon = null;\n  selectedMiscs = {\n    RIGOUR: false,\n    AUGURY: false,\n    'SLAYER TASK': false\n  };\n\n  constructor() {}\n  ngOnInit(): void {}\n\n  public openLiveChat(flag: boolean) {\n    if (flag) {\n      return;\n    }\n\n    const w = window;\n    sendLiveChatMessage(`Hello!\n    My infernal details:\n        Region: ${this.selectedRegion},\n        Platform: ${this.selectedPlatform}\n        Speed: ${this.selectedSpeed}\n        Weapon: ${this.selectedWeapon}\n        Misc:\n          Rigour: ${this.selectedMiscs.RIGOUR},\n          Augury: ${this.selectedMiscs.AUGURY},\n          Slayer Task: ${this.selectedMiscs['SLAYER TASK']}\n        Stats:\n          Ranged = ${this.ranged.value}\n          Defence = ${this.defence.value}\n          Prayer = ${this.prayer.value}\n          Magic =${this.magic.value}\n          Hitpoints = ${this.hitpoints.value}\n    `);\n  }\n\n  public disabled() {\n    if (\n      this.selectedRegion === null ||\n      this.selectedPlatform === null ||\n      this.selectedSpeed === null ||\n      this.selectedWeapon === null\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n","<div class=\"infernal-page\">\n  <div class=\"main-container\">\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-12 landing-title\">\n          <span class=\"color-gold\">Infernal</span> Cape Service\n        </div>\n      </div>\n      <div class=\"row mt-2\">\n        <div class=\"col-12 landing-description landing-description-mb\">\n          <span class=\"color-gold\">Save your time</span>, get everything that\n          you need\n        </div>\n      </div>\n      <div class=\"d-flex flex-row flex-wrap justify-content-around top-options\">\n        <div class=\"p-2\">\n          <h3>Region</h3>\n          <div class=\"d-flex flex-row justify-content-center flex-wrap\">\n            <div\n              *ngFor=\"let region of regions\"\n              class=\"p-2 mr-4 option\"\n              [ngClass]=\"{ selected: region.name === selectedRegion }\"\n              (click)=\"selectedRegion = region.name\"\n            >\n              <img height=\"60px\" src=\"{{ region.imgUrl }}\" />\n              <p class=\"text-center item-text\">{{ region.name }}</p>\n            </div>\n          </div>\n        </div>\n        <div class=\"p-2\">\n          <h3>Platform</h3>\n          <div class=\"d-flex flex-row justify-content-center flex-wrap\">\n            <div\n              *ngFor=\"let platform of platforms\"\n              class=\"p-2 mr-4 option\"\n              [ngClass]=\"{ selected: platform.name === selectedPlatform }\"\n              (click)=\"selectedPlatform = platform.name\"\n            >\n              <img src=\"{{ platform.imgUrl }}\" />\n              <p class=\"text-center item-text\">{{ platform.name }}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"d-flex flex-row flex-wrap justify-content-center\">\n        <div class=\"p-2 bottom-option\">\n          <h3>Upload Speed</h3>\n          <div class=\"d-flex flex-row flex-wrap justify-content-center\">\n            <div\n              *ngFor=\"let uploadSpeed of uploadSpeeds\"\n              class=\"option square-option\"\n              [ngClass]=\"{ selected: uploadSpeed === selectedSpeed }\"\n              (click)=\"selectedSpeed = uploadSpeed\"\n            >\n              <p>{{ uploadSpeed }}</p>\n            </div>\n          </div>\n        </div>\n        <div class=\"p-2 bottom-option\">\n          <h3>Stats</h3>\n          <div class=\"d-flex flex-row flex-wrap justify-content-center\">\n            <div class=\"p-2 input-group mb-3 option square-option\">\n              <div class=\"input-group-prepend\">\n                <img src=\"./assets/images/infernal/arrow.png\" alt=\"\" />\n              </div>\n              <input\n                type=\"number\"\n                min=\"0\"\n                max=\"99\"\n                class=\"form-control\"\n                aria-label=\"arrow\"\n                [formControl]=\"ranged\"\n                oninput=\"if (value > 99 || value < 0) alert('Value has to be in range of 0 and 99')\"\n                maxlength=\"2\"\n                size=\"1\"\n              />\n            </div>\n            <div class=\"p-2 input-group mb-3 option square-option\">\n              <div class=\"input-group-prepend\">\n                <img src=\"./assets/images/infernal/shield.png\" alt=\"\" />\n              </div>\n              <input\n                type=\"number\"\n                min=\"0\"\n                max=\"99\"\n                class=\"form-control\"\n                aria-label=\"shield\"\n                [formControl]=\"defence\"\n                oninput=\"if (value > 99 || value < 0) alert('Value has to be in range of 0 and 99')\"\n                maxlength=\"2\"\n              />\n            </div>\n            <div class=\"p-2 input-group mb-3 option square-option\">\n              <div class=\"input-group-prepend\">\n                <img src=\"./assets/images/infernal/prayer.png\" alt=\"\" />\n              </div>\n              <input\n                type=\"number\"\n                min=\"0\"\n                max=\"99\"\n                class=\"form-control\"\n                aria-label=\"prayer\"\n                [formControl]=\"prayer\"\n                oninput=\"if (value > 99 || value < 0) alert('Value has to be in range of 0 and 99')\"\n                maxlength=\"2\"\n              />\n            </div>\n            <div class=\"p-2 input-group mb-3 option square-option\">\n              <div class=\"input-group-prepend\">\n                <img src=\"./assets/images/infernal/magic.png\" alt=\"\" />\n              </div>\n              <input\n                type=\"number\"\n                min=\"0\"\n                max=\"99\"\n                class=\"form-control\"\n                aria-label=\"magic\"\n                [formControl]=\"magic\"\n                oninput=\"if (value > 99 || value < 0) alert('Value has to be in range of 0 and 99')\"\n                maxlength=\"2\"\n              />\n            </div>\n            <div class=\"p-2 input-group mb-3 option square-option\">\n              <div class=\"input-group-prepend\">\n                <img src=\"./assets/images/infernal/hitpoints.png\" alt=\"\" />\n              </div>\n              <input\n                type=\"number\"\n                min=\"0\"\n                max=\"99\"\n                class=\"form-control\"\n                aria-label=\"hitpoints\"\n                [formControl]=\"hitpoints\"\n                oninput=\"if (value > 99 || value < 0) alert('Value has to be in range of 0 and 99')\"\n                maxlength=\"2\"\n              />\n            </div>\n          </div>\n        </div>\n        <div class=\"p-2 bottom-option\">\n          <h3>Weapons</h3>\n          <div class=\"d-flex flex-row flex-wrap justify-content-center\">\n            <div\n              *ngFor=\"let weapon of weapons\"\n              class=\"option circle-option\"\n              [ngClass]=\"{ selected: weapon.name === selectedWeapon }\"\n              (click)=\"selectedWeapon = weapon.name\"\n            >\n              <img src=\"{{ weapon.imgUrl }}\" alt=\"\" />\n              <p class=\"text-center\">{{ weapon.name }}</p>\n            </div>\n          </div>\n        </div>\n        <div class=\"p-2 bottom-option last-bt\">\n          <h3>Misc</h3>\n          <div class=\"d-flex flex-row flex-wrap justify-content-center\">\n            <div\n              *ngFor=\"let misc of miscs\"\n              class=\"option circle-option\"\n              [ngClass]=\"{ selected: selectedMiscs[misc.name] === true }\"\n              (click)=\"selectedMiscs[misc.name] = !selectedMiscs[misc.name]\"\n            >\n              <img src=\"{{ misc.imgUrl }}\" alt=\"\" />\n              <p class=\"text-center\">{{ misc.name }}</p>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"col-12 d-flex flex-row justify-content-center mt-5\">\n          <button id=\"request\" (click)=\"openLiveChat(disabled())\">\n            Request Quote\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- Overlay -->\n  <img class=\"overlay-2\" src=\"./assets/images/branding/buy-bg-lower.png\" />\n  <div class=\"container-fluid\">\n    <div class=\"d-flex flex-row justify-content-around flex-wrap text-center\">\n      <div class=\"details\">\n        <img src=\"./assets/images/infernal/tzkal.png\" alt=\"\" />\n        <h2>\n          <span class=\"color-gold\">Professional </span> Infernal Cape Service\n        </h2>\n        <p class=\"color-gold\">We can take infernal capes in any build</p>\n        <p>Our employees are only experienced runescape players</p>\n        <p class=\"color-gold\">\n          We taking inferno capes with the safest methods\n        </p>\n        <p>We will offer you the best price in the market</p>\n        <p class=\"color-gold\">\n          Our employees took more than 1200+ capes on every build\n        </p>\n      </div>\n      <div class=\"details\" id=\"tos\">\n        <img src=\"./assets/images/infernal/tos.png\" alt=\"\" />\n        <h2>\n          <span class=\"color-gold\">Terms of Service </span>\n        </h2>\n        <p class=\"text-uppercase\">\n          By using our service you are agreeing to the following:\n        </p>\n        <ol>\n          <li>\n            Account details are sent directly through DM to the infernal worker\n            or owner.\n          </li>\n          <li class=\"color-gold\">The buyer must pay upfront.</li>\n          <li>\n            If a cape is not completed in 1 run you will receive a second\n            attempt or refund.\n          </li>\n          <li class=\"color-gold\">\n            The customer will provide the gear/supplies required for the\n            service.\n          </li>\n          <li>\n            We are not responsible for any bans or mules during of after the\n            service has been completed.\n          </li>\n          <li class=\"color-gold\">\n            We are not responsible for any cape removals after the service is\n            done.\n          </li>\n          <li>\n            By purchasing an inferno cape service you agreee with our terms of\n            services.\n          </li>\n        </ol>\n      </div>\n    </div>\n  </div>\n</div>\n"]}