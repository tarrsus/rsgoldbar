{"version":3,"sources":["webpack:///src/app/core/login/login/login.component.ts","webpack:///src/app/core/login/login/login.component.html","webpack:///src/app/core/login/login.module.ts","webpack:///src/app/core/login/login-routing.module.ts"],"names":["LoginComponent","basePageService","req","route","router","watcher","user","matcher","loginForm","email","required","password","queryParams","subscribe","result","identifier","userId","activateUser","pipe","componentDestroyed$","response","logout","data","loginUrl","baseUrl","post","localStorage","setItem","change","jwt","navigate","login","selector","templateUrl","styleUrls","LoginModule","declarations","imports","routes","path","component","LoginRoutingModule","forChild","exports"],"mappings":"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","file":"core-login-login-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { RequestsService } from 'src/app/shared/requests.service';\nimport { WatcherService } from 'src/app/shared/watcher.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { isEmptyOrNull, MyErrorStateMatcher } from 'src/app/shared/utils';\nimport { environment } from 'src/environments/environment';\nimport { BasePageComponent } from '../../base-page.component';\nimport { UserService } from 'src/app/shared/user.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { BasePageService } from 'src/app/shared/base-page.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.sass']\n})\nexport class LoginComponent extends BasePageComponent implements OnInit {\n  matcher = new MyErrorStateMatcher();\n  loginForm = new FormGroup({\n    email: new FormControl('', Validators.required),\n    password: new FormControl('', Validators.required)\n  });\n  // tslint:disable-next-line:max-line-length\n  constructor(private basePageService: BasePageService, private req: RequestsService, private route: ActivatedRoute, private router: Router, private watcher: WatcherService, private user: UserService) {\n    super();\n  }\n\n  ngOnInit() {\n    // this.basePageService.updateTitleDescription('Login', 'Login to your account');\n\n    this.route.queryParams.subscribe(result => {\n      if (!isEmptyOrNull(result.identifier) && !isEmptyOrNull(result.userId)) {\n        this.user.activateUser(true, {\n          identifier: result.identifier,\n          userId: result.userId\n        }).pipe(takeUntil(this.componentDestroyed$)).subscribe(response => {\n          this.watcher.logout();\n        });\n      }\n    });\n  }\n\n  public login(data: any) {\n    const loginUrl = `${environment.baseUrl}/api/oauth`;\n    this.req.post(loginUrl, data).pipe(takeUntil(this.componentDestroyed$)).subscribe(result => {\n      localStorage.setItem('jwt', result);\n      this.watcher.change({ jwt: result });\n      this.router.navigate([`/`]);\n      // this.watcher.setVars();\n    });\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n  }\n}\n","<div class=\"selling-page\">\n    <div class=\"main-container\">\n        <div class=\"container-fluid\">\n            <div class=\"container-fluid material-ui\">\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <form class=\"common-form\" [formGroup]=\"loginForm\" (ngSubmit)=\"login(loginForm.value)\">\n                            <div class=\"form-title text-center\">Login</div>\n                            <mat-form-field appearance=\"outline\">\n                                <input matInput placeholder=\"Email\" formControlName=\"email\"\n                                    [errorStateMatcher]=\"matcher\" type=\"text\">\n                                <mat-hint>Email is <strong>required</strong></mat-hint>\n\n                                <mat-error *ngIf=\"loginForm.controls['email'].hasError('required')\">\n                                    Email is <strong>required</strong>\n                                </mat-error>\n                            </mat-form-field>\n\n                            <mat-form-field appearance=\"outline\">\n                                <input matInput placeholder=\"Password\" formControlName=\"password\"\n                                    [errorStateMatcher]=\"matcher\" type=\"password\">\n                                <mat-hint>Password is <strong>required</strong></mat-hint>\n\n                                <mat-error *ngIf=\"loginForm.controls['password'].hasError('required')\">\n                                    Password is <strong>required</strong>\n                                </mat-error>\n                            </mat-form-field>\n\n                            <button mat-raised-button type=\"submit\" [disabled]=\"!loginForm.valid\">\n                                Login\n                            </button>\n                            <div class=\"pt-2\">\n                                <mat-hint>Not registered yet? <a [routerLink]=\"['/register']\">Create a new account</a>\n                                </mat-hint>\n                                <br>\n                                <mat-hint>Forgot password? <a [routerLink]=\"['/forgot-password']\">Reset password</a>\n                                </mat-hint>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    LoginRoutingModule,\n    SharedModule\n  ]\n})\nexport class LoginModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule { }\n"]}