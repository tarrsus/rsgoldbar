{"version":3,"sources":["./src/app/core/login/login/login.component.ts","./src/app/core/login/login/login.component.html","./src/app/core/login/login.module.ts","./src/app/core/login/login-routing.module.ts"],"names":[],"mappings":"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","file":"core-login-login-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { RequestsService } from 'src/app/shared/requests.service';\nimport { WatcherService } from 'src/app/shared/watcher.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { isEmptyOrNull, MyErrorStateMatcher } from 'src/app/shared/utils';\nimport { environment } from 'src/environments/environment';\nimport { BasePageComponent } from '../../base-page.component';\nimport { UserService } from 'src/app/shared/user.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { BasePageService } from 'src/app/shared/base-page.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.sass']\n})\nexport class LoginComponent extends BasePageComponent implements OnInit {\n  matcher = new MyErrorStateMatcher();\n  loginForm = new FormGroup({\n    email: new FormControl('', Validators.required),\n    password: new FormControl('', Validators.required)\n  });\n  // tslint:disable-next-line:max-line-length\n  constructor(private basePageService: BasePageService, private req: RequestsService, private route: ActivatedRoute, private router: Router, private watcher: WatcherService, private user: UserService) {\n    super();\n  }\n\n  ngOnInit() {\n    // this.basePageService.updateTitleDescription('Login', 'Login to your account');\n\n    this.route.queryParams.subscribe(result => {\n      if (!isEmptyOrNull(result.identifier) && !isEmptyOrNull(result.userId)) {\n        this.user.activateUser(true, {\n          identifier: result.identifier,\n          userId: result.userId\n        }).pipe(takeUntil(this.componentDestroyed$)).subscribe(response => {\n          this.watcher.logout();\n        });\n      }\n    });\n  }\n\n  public login(data: any) {\n    const loginUrl = `${environment.baseUrl}/api/oauth`;\n    this.req.post(loginUrl, data).pipe(takeUntil(this.componentDestroyed$)).subscribe(result => {\n      localStorage.setItem('jwt', result);\n      this.watcher.change({ jwt: result });\n      this.router.navigate([`/`]);\n      // this.watcher.setVars();\n    });\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n  }\n}\n","<div class=\"selling-page\">\n    <div class=\"main-container\">\n        <div class=\"container-fluid\">\n            <div class=\"container-fluid material-ui\">\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <form class=\"common-form\" [formGroup]=\"loginForm\" (ngSubmit)=\"login(loginForm.value)\">\n                            <div class=\"form-title text-center\">Login</div>\n                            <mat-form-field appearance=\"outline\">\n                                <input matInput placeholder=\"Email\" formControlName=\"email\"\n                                    [errorStateMatcher]=\"matcher\" type=\"text\">\n                                <mat-hint>Email is <strong>required</strong></mat-hint>\n\n                                <mat-error *ngIf=\"loginForm.controls['email'].hasError('required')\">\n                                    Email is <strong>required</strong>\n                                </mat-error>\n                            </mat-form-field>\n\n                            <mat-form-field appearance=\"outline\">\n                                <input matInput placeholder=\"Password\" formControlName=\"password\"\n                                    [errorStateMatcher]=\"matcher\" type=\"password\">\n                                <mat-hint>Password is <strong>required</strong></mat-hint>\n\n                                <mat-error *ngIf=\"loginForm.controls['password'].hasError('required')\">\n                                    Password is <strong>required</strong>\n                                </mat-error>\n                            </mat-form-field>\n\n                            <button mat-raised-button type=\"submit\" [disabled]=\"!loginForm.valid\">\n                                Login\n                            </button>\n                            <div class=\"pt-2\">\n                                <mat-hint>Not registered yet? <a [routerLink]=\"['/register']\">Create a new account</a>\n                                </mat-hint>\n                                <br>\n                                <mat-hint>Forgot password? <a [routerLink]=\"['/forgot-password']\">Reset password</a>\n                                </mat-hint>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    LoginRoutingModule,\n    SharedModule\n  ]\n})\nexport class LoginModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule { }\n"],"sourceRoot":"webpack:///"}