{"version":3,"sources":["webpack:///src/app/core/forgot-password/forgot-password.module.ts","webpack:///src/app/core/forgot-password/forgot-password/forgot-password.component.ts","webpack:///src/app/core/forgot-password/forgot-password/forgot-password.component.html","webpack:///src/app/core/forgot-password/forgot-password-routing.module.ts"],"names":["ForgotPasswordModule","declarations","imports","ForgotPasswordComponent","basePageService","user","router","route","matcher","forgetForm","email","required","updateTitleDescription","queryParams","subscribe","result","identifier","userId","generatePassword","pipe","componentDestroyed$","response","navigate","data","forgotPassword","forget","selector","templateUrl","styleUrls","routes","path","component","ForgotPasswordRoutingModule","forChild","exports"],"mappings":"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","file":"core-forgot-password-forgot-password-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ForgotPasswordRoutingModule } from './forgot-password-routing.module';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n\n@NgModule({\n  declarations: [ForgotPasswordComponent],\n  imports: [\n    CommonModule,\n    ForgotPasswordRoutingModule,\n    SharedModule\n  ]\n})\nexport class ForgotPasswordModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { BasePageComponent } from '../../base-page.component';\nimport { MyErrorStateMatcher, isEmptyOrNull } from 'src/app/shared/utils';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { UserService } from 'src/app/shared/user.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { takeUntil } from 'rxjs/operators';\nimport { BasePageService } from 'src/app/shared/base-page.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.sass']\n})\nexport class ForgotPasswordComponent extends BasePageComponent implements OnInit {\n  matcher = new MyErrorStateMatcher();\n  forgetForm = new FormGroup({\n    email: new FormControl('', Validators.required)\n  });\n\n  constructor(private basePageService: BasePageService, private user: UserService, private router: Router, private route: ActivatedRoute) {\n    super();\n    this.basePageService.updateTitleDescription('Forgot Password', 'Can\\t access your account? Reset your password');\n  }\n\n  ngOnInit() {\n    this.route.queryParams.subscribe(result => {\n      if (!isEmptyOrNull(result.identifier) && !isEmptyOrNull(result.userId)) {\n        this.user.generatePassword({\n          identifier: result.identifier,\n          userId: result.userId\n        }).pipe(takeUntil(this.componentDestroyed$)).subscribe(response => {\n          this.router.navigate([`/login`]);\n        });\n      }\n    });\n  }\n\n  public forget(data: any) {\n    this.user.forgotPassword(data).pipe(takeUntil(this.componentDestroyed$)).subscribe(result => {\n      this.router.navigate([`/login`]);\n    });\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n  }\n}\n\n\n","<div class=\"selling-page\">\n    <div class=\"main-container\">\n        <div class=\"container-fluid material-ui\">\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <form class=\"common-form\" [formGroup]=\"forgetForm\" (ngSubmit)=\"forget(forgetForm.value)\">\n                        <div class=\"form-title text-center\">Forgot Password?</div>\n                        <mat-form-field appearance=\"outline\">\n                            <input matInput placeholder=\"Email\" formControlName=\"email\" [errorStateMatcher]=\"matcher\"\n                                type=\"text\">\n                            <mat-hint>Email is <strong>required</strong></mat-hint>\n\n                            <mat-error *ngIf=\"forgetForm.controls['email'].hasError('required')\">\n                                Email is <strong>required</strong>\n                            </mat-error>\n                        </mat-form-field>\n\n                        <button mat-raised-button type=\"submit\" [disabled]=\"!forgetForm.valid\">\n                            Reset Password\n                        </button>\n\n                        <div class=\"pt-4\">\n                            <h4>Remember your password?</h4>\n                            <a routerLink=\"/login\" class=\"link\">Go back to login page</a>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ForgotPasswordComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ForgotPasswordRoutingModule { }\n"]}